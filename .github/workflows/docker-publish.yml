name: Build and Publish Docker Image

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./my-collection-search
          file: ./my-collection-search/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/myapp:${{ github.ref_name }}
          build-args: |
            OPENAI_API_KEY=dummy
            NEXT_PUBLIC_MEILISEARCH_HOST=http://vinyl.local:7700
            NEXT_PUBLIC_MEILISEARCH_API_KEY=mysupersecretkey
            DISCOGS_USER_TOKEN=dummytoken
            DISCOGS_USERNAME=dummyusername
            DISCOGS_FOLDER_ID=dummyfolderid
            APPLE_MUSIC_TEAM_ID=dummyteamid
            APPLE_MUSIC_KEY_ID=dummykid
            APPLE_MUSIC_PRIVATE_KEY_PATH=/path/to/dummy/private/key.pem
            DATABASE_URL=postgres://djplaylist:djplaylistpassword@db:5432/djplaylist
            MEILISEARCH_HOST=http://meili:7700
            MEILISEARCH_API_KEY=mysupersecretkey
            YOUTUBE_API_KEY=dummyyoutubeapikey

      - name: Image digest
        run: echo "Published image for tag ${{ github.ref_name }}"

  build-essentia:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Essentia API
        uses: docker/build-push-action@v5
        with:
          context: ./essentia-api
          file: ./essentia-api/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/essentia-api:${{ github.ref_name }}

      - name: Image digest
        run: echo "Published Essentia API image for tag ${{ github.ref_name }}"
